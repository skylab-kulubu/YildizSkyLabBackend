// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: team_leads.sql

package sqlc

import (
	"context"
)

const createTeamLead = `-- name: CreateTeamLead :one
INSERT INTO team_leads (team_id, user_id,created_at,updated_at) values ($1,$2,NOW(),NOW()) RETURNING id, team_id, user_id, created_at, updated_at, deleted_at
`

type CreateTeamLeadParams struct {
	TeamID int32 `json:"team_id"`
	UserID int32 `json:"user_id"`
}

func (q *Queries) CreateTeamLead(ctx context.Context, arg CreateTeamLeadParams) (TeamLead, error) {
	row := q.db.QueryRowContext(ctx, createTeamLead, arg.TeamID, arg.UserID)
	var i TeamLead
	err := row.Scan(
		&i.ID,
		&i.TeamID,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const deleteTeamLead = `-- name: DeleteTeamLead :exec
UPDATE team_leads SET deleted_at = NOW() WHERE team_id = $1 AND user_id = $2
`

type DeleteTeamLeadParams struct {
	TeamID int32 `json:"team_id"`
	UserID int32 `json:"user_id"`
}

func (q *Queries) DeleteTeamLead(ctx context.Context, arg DeleteTeamLeadParams) error {
	_, err := q.db.ExecContext(ctx, deleteTeamLead, arg.TeamID, arg.UserID)
	return err
}
