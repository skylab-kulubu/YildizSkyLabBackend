// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: images.sql

package sqlc

import (
	"context"
	"database/sql"
)

const getImageByUrl = `-- name: GetImageByUrl :one
SELECT id, type, name, data, url, created_by, created_at
FROM images
WHERE url = $1
`

func (q *Queries) GetImageByUrl(ctx context.Context, url string) (Image, error) {
	row := q.db.QueryRowContext(ctx, getImageByUrl, url)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.Type,
		&i.Name,
		&i.Data,
		&i.Url,
		&i.CreatedBy,
		&i.CreatedAt,
	)
	return i, err
}

const saveImage = `-- name: SaveImage :one
INSERT INTO images (type, name, data, url, created_by)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, type, name, url, created_by, created_at
`

type SaveImageParams struct {
	Type      string `json:"type"`
	Name      string `json:"name"`
	Data      []byte `json:"data"`
	Url       string `json:"url"`
	CreatedBy int32  `json:"created_by"`
}

type SaveImageRow struct {
	ID        int32        `json:"id"`
	Type      string       `json:"type"`
	Name      string       `json:"name"`
	Url       string       `json:"url"`
	CreatedBy int32        `json:"created_by"`
	CreatedAt sql.NullTime `json:"created_at"`
}

func (q *Queries) SaveImage(ctx context.Context, arg SaveImageParams) (SaveImageRow, error) {
	row := q.db.QueryRowContext(ctx, saveImage,
		arg.Type,
		arg.Name,
		arg.Data,
		arg.Url,
		arg.CreatedBy,
	)
	var i SaveImageRow
	err := row.Scan(
		&i.ID,
		&i.Type,
		&i.Name,
		&i.Url,
		&i.CreatedBy,
		&i.CreatedAt,
	)
	return i, err
}
